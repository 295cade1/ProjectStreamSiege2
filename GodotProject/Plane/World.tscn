[gd_scene load_steps=11 format=3 uid="uid://bvmpbvvl3ea1p"]

[ext_resource type="PackedScene" uid="uid://dsvw8t7is3u0t" path="res://Plane/Plane.tscn" id="1_qnrsq"]
[ext_resource type="Script" path="res://Plane/Camera.cs" id="2_0exnf"]
[ext_resource type="PackedScene" uid="uid://b20wgbm8gsb56" path="res://World/Terrain/Terrain.tscn" id="2_6c1ba"]

[sub_resource type="CameraAttributesPractical" id="CameraAttributesPractical_l6y4e"]
auto_exposure_enabled = true

[sub_resource type="PhysicalSkyMaterial" id="PhysicalSkyMaterial_6m25r"]
turbidity = 1.0

[sub_resource type="Sky" id="Sky_qsbnv"]
sky_material = SubResource("PhysicalSkyMaterial_6m25r")

[sub_resource type="Environment" id="Environment_w1oax"]
background_mode = 2
sky = SubResource("Sky_qsbnv")
ambient_light_source = 3
reflected_light_source = 2
tonemap_mode = 3
fog_density = 0.0001
volumetric_fog_density = 0.01

[sub_resource type="CameraAttributesPractical" id="CameraAttributesPractical_48oly"]
dof_blur_far_enabled = true
dof_blur_far_distance = 4000.0
dof_blur_far_transition = 1000.0

[sub_resource type="Shader" id="Shader_npxti"]
code = "// NOTE: Shader automatically converted from Godot Engine 4.0.rc1.mono's StandardMaterial3D.

shader_type spatial;
render_mode blend_mix,depth_draw_opaque,cull_back,diffuse_burley,specular_schlick_ggx;
uniform vec4 albedo : source_color;
uniform sampler2D texture_albedo : source_color,filter_linear_mipmap,repeat_enable;
uniform float point_size : hint_range(0,128);
uniform float roughness : hint_range(0,1);
uniform sampler2D texture_metallic : hint_default_white,filter_linear_mipmap,repeat_enable;
uniform vec4 metallic_texture_channel;
uniform sampler2D texture_roughness : hint_roughness_r,filter_linear_mipmap,repeat_enable;
uniform float specular;
uniform float metallic;
varying vec3 uv1_triplanar_pos;
uniform float uv1_blend_sharpness;
varying vec3 uv1_power_normal;
uniform vec3 uv1_scale;
uniform vec3 uv1_offset;
uniform vec3 uv2_scale;
uniform vec3 uv2_offset;


void vertex() {
	TANGENT = vec3(0.0,0.0,-1.0) * abs(NORMAL.x);
	TANGENT+= vec3(1.0,0.0,0.0) * abs(NORMAL.y);
	TANGENT+= vec3(1.0,0.0,0.0) * abs(NORMAL.z);
	TANGENT = normalize(TANGENT);
	BINORMAL = vec3(0.0,1.0,0.0) * abs(NORMAL.x);
	BINORMAL+= vec3(0.0,0.0,-1.0) * abs(NORMAL.y);
	BINORMAL+= vec3(0.0,1.0,0.0) * abs(NORMAL.z);
	BINORMAL = normalize(BINORMAL);
	uv1_power_normal=pow(abs(NORMAL),vec3(uv1_blend_sharpness));
	uv1_triplanar_pos = VERTEX * uv1_scale + uv1_offset;
	uv1_power_normal/=dot(uv1_power_normal,vec3(1.0));
	uv1_triplanar_pos *= vec3(1.0,-1.0, 1.0);
}




vec4 triplanar_texture(sampler2D p_sampler,vec3 p_weights,vec3 p_triplanar_pos) {
	vec4 samp=vec4(0.0);
	samp+= texture(p_sampler,p_triplanar_pos.xy) * p_weights.z;
	samp+= texture(p_sampler,p_triplanar_pos.xz) * p_weights.y;
	samp+= texture(p_sampler,p_triplanar_pos.zy * vec2(-1.0,1.0)) * p_weights.x;
	return samp;
}


void fragment() {
	vec4 albedo_tex = triplanar_texture(texture_albedo,uv1_power_normal,uv1_triplanar_pos);
	ALBEDO = albedo.rgb * albedo_tex.rgb;
	float metallic_tex = dot(triplanar_texture(texture_metallic,uv1_power_normal,uv1_triplanar_pos),metallic_texture_channel);
	METALLIC = metallic_tex * metallic;
	vec4 roughness_texture_channel = vec4(1.0,0.0,0.0,0.0);
	float roughness_tex = dot(triplanar_texture(texture_roughness,uv1_power_normal,uv1_triplanar_pos),roughness_texture_channel);
	ROUGHNESS = roughness_tex * roughness;
	SPECULAR = specular;
}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_qevbw"]
render_priority = 0
shader = SubResource("Shader_npxti")
shader_parameter/albedo = null
shader_parameter/point_size = null
shader_parameter/roughness = null
shader_parameter/metallic_texture_channel = null
shader_parameter/specular = null
shader_parameter/metallic = null
shader_parameter/uv1_blend_sharpness = null
shader_parameter/uv1_scale = null
shader_parameter/uv1_offset = null
shader_parameter/uv2_scale = null
shader_parameter/uv2_offset = null

[node name="World" type="Node3D"]

[node name="Plane" parent="." instance=ExtResource("1_qnrsq")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 30.3921, 0)
linear_velocity = Vector3(2.08165e-12, 2.08165e-12, -300)

[node name="Camera3D" type="Camera3D" parent="Plane" node_paths=PackedStringArray("plane")]
attributes = SubResource("CameraAttributesPractical_l6y4e")
current = true
fov = 90.0
script = ExtResource("2_0exnf")
plane = NodePath("..")

[node name="DirectionalLight3D" type="DirectionalLight3D" parent="."]
transform = Transform3D(0.447861, -0.513627, 0.731853, -0.891977, -0.313082, 0.326124, 0.0616239, -0.798854, -0.59836, 0, 43.1016, 0)
shadow_enabled = true
shadow_bias = 0.2
shadow_reverse_cull_face = true
directional_shadow_mode = 0
directional_shadow_blend_splits = true
directional_shadow_max_distance = 4096.0

[node name="WorldEnvironment" type="WorldEnvironment" parent="."]
environment = SubResource("Environment_w1oax")
camera_attributes = SubResource("CameraAttributesPractical_48oly")

[node name="Terrain" parent="." instance=ExtResource("2_6c1ba")]
custom_aabb = AABB(-2048, 0, -2048, 4096, 4000, 4096)
gi_mode = 2
plane = NodePath("../Plane")

[node name="CSGBox3D" type="CSGBox3D" parent="Terrain"]
material = SubResource("ShaderMaterial_qevbw")
